name: build
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ubuntu-latest
        build_type: RelWithDebInfo
        ui: gui
        scripting: lua
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          libpixman-1-dev libfreetype6-dev libharfbuzz-dev zlib1g-dev \
          libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev
    - name: Install Skia
      if: ${{ matrix.ui == 'gui' }}
      shell: bash
      run: |
          wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Linux-Release-x64-libstdc++.zip
          unzip Skia-Linux-Release-x64-libstdc++.zip -d skia
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ matrix.os }}-${{ matrix.ui }}-${{ matrix.scripting }}-${{ matrix.build_type }}
    - uses: aseprite/get-ninja@main
    - name: Generating Makefiles
      shell: bash
      run: |
          export enable_ccache=on
          export laf_backend=skia
          export enable_scripting=on
          export skia_arch=x64
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
          -DENABLE_TESTS=ON \
          -DENABLE_SCRIPTING=$enable_scripting \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=$laf_backend \
          -DSKIA_DIR=skia \
          -DSKIA_LIBRARY_DIR=skia/out/Release-$skia_arch
    - name: Compiling
      shell: bash
      run: |
        cd build && ninja
    - name: view dir
      shell: bash
      run: pwd ; ls -lAh
  - uses: actions/upload-artifact@v4
      with:
        name: aseprite
        path: |
          /home/runner/work/aseprite/aseprite/build/bin/data
          /home/runner/work/aseprite/aseprite/build/bin/aseprite
